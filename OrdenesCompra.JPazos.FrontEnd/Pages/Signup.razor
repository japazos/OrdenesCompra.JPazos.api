@page "/signup"
@using Microsoft.AspNetCore.Components.Forms
@using OrdenesCompra.JPazos.FrontEnd.Dto
@using OrdenesCompra.JPazos.FrontEnd.Services
@inject SecurityService SecurityService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Suscribirse</PageTitle>

<h3>Suscribirse para obtener Token para realizar las consultas de Ordenes</h3>

<EditForm Model="@signUpModel" OnValidSubmit="@HandleSignUp">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="nombres">Nombres</label>
        <InputText id="nombres" @bind-Value="signUpModel.Nombres" class="form-control" />
        <ValidationMessage For="@(() => signUpModel.Nombres)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="apellidos">Apellidos</label>
        <InputText id="apellidos" @bind-Value="signUpModel.Apellidos" class="form-control" />
        <ValidationMessage For="@(() => signUpModel.Apellidos)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="signUpModel.Email" class="form-control" />
        <ValidationMessage For="@(() => signUpModel.Email)" class="text-danger" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="signUpModel.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => signUpModel.Password)" class="text-danger" />
    </div>
    <button type="submit" class="btn btn-primary">Sign Up</button>
    <button type="button" class="btn btn-secondary" @onclick="NavigateToSignIn">Cancel</button>
</EditForm>

@code {
    private SignUpDto signUpModel = new SignUpDto();

    private async Task HandleSignUp()
    {
        var response = await SecurityService.SignUp(signUpModel);
        if (response == true)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Usuario registrado exitosamente. Por favor, inicie sesión.");
            NavigationManager.NavigateTo("/");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error al registrar usuario");
        }
    }

    private void NavigateToSignIn()
    {
        NavigationManager.NavigateTo("/");
    }
}

